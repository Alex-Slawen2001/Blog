
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.108.0">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" type="text/css" href="blog.rtl.css">
    <link rel="stylesheet" type="text/css" href="blog.css">
    <title>Контактная форма</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="canonical" href="https://getbootstrap.com/docs/5.3/examples/blog/">

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>

    

<link href="../assets/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }
    </style>

    
    <!-- Custom styles for this template -->
    <link href="https://fonts.googleapis.com/css?family=Playfair&#43;Display:700,900&amp;display=swap" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="blog.css" rel="stylesheet">
  </head>
  <body>
  


  <?php require "blocks/header.php"?>
  
  
  <div class="container">
      <h2>Языки программирования</h2>
      <p class="lead  my-3">
      Классификация языков программирования помогает понять, какие концепции и парадигмы заложены в той или иной методике написания программного обеспечения. Этот момент должен уяснить каждый будущий разработчик, иначе с созданием собственного контента возникнут серьезные проблемы.
      </p>
      <p class="lead  my-3">
      В данной статье будет рассказано все о классификации языков программирования в 21 веке. Соответствующая информация поможет как новичкам, так и уже опытным разработчикам. А еще предстоит рассмотреть самые распространенные programming languages с их особенностями, преимуществами и недостатками.
    </p>
    <p class="lead  my-3">
    <h2>Основная классификация</h2>
Классификация языков разработки может быть совершенно разной. Здесь стоит обратить внимание на несколько способов «деления на категории».
Первый вариант – это классификация по зависимости от аппаратного устройства (компьютера):<br>
-языки низкого уровня;<br>
-языки высокого уровня.<br>
<h3>По принципам программирования:</h3>

-процедурные;<br>
-непроцедурные;<br>
-объектно-ориентированные.<br>
<h3>По ориентации на класс задач, выполняемых получившимся софтом:</h3>
-универсальные;<br>
-специализированные.<br>
Есть логическое программирование, функциональное, объектно-ориентированное. Programming Languages бывают также кроссплатформенными и нативными. Классифицировать ЯП можно по разным признакам, но предложенные варианты являются «классическими». Они помогают быстрее остальных форм разделения ЯП по типам выбрать подходящий вариант для дальнейшего изучения.
    </p>
    
    <p class="lead  my-3">
    <h2>Популярные языки разработки</h2>
Зная, что такое programming language, пользователь сможет выбрать один из них для более глубокого и тщательного изучения. Миру известны десятки ЯП – от языков низкого уровня до высокого. Но есть несколько непревзойденных лидеров, которые чаще всего встречаются на практике.

<h3>C++</h3>
Один из самых старых и актуальных языков. На C++ пишут практически все существующие приложения. Это – язык программирования универсального характера. Он помогает при создании не только игр, но и сложных бизнес-решений, веб-сайтов, служб для операционных систем.

Программист, свободно владеющий C++, сможет с легкостью найти себе место работы. Он демонстрирует профессионализм в сфере разработки ПО на высшем уровне.

К особенностям C++ относят:

универсальность;
трудности изучения – новичку разобраться с программным кодом достаточно тяжело;
кроссплатформенность;
сложность синтаксиса;
огромный исходный код.
C++ — то, что рано или поздно должен освоить каждый грамотный разработчик.

<h3>Visual Basic</h3>
Это – объектно-ориентированный язык. На нем пишутся продукты от компании Microsoft. Отличается функциональностью, простотой освоения. Хорошо подходит для написания всевозможных прототипов.

Но у VB есть и минусы. Работа с памятью осуществляется медленно. Здесь нельзя оставлять комментарии, а сложные утилиты будут «тормозить» даже на самых мощных устройствах. Это – неплохой вариант для мини-приложений.

<h3>Python</h3>
Разобравшись, что собой представляет логическое программирование и другие концепции создания ПО, стоит обратить внимание на Питон. Данный ЯП в последние 5-8 лет стал набирать стремительную популярность.

Он относится к языкам программирования общего назначения. Предусматривает концепции ООП в своем составе. Прост в изучении и функционален. Обладает хорошей поддержкой и финансированием.

На Python программист сможет создавать небольшие и средние проекты. А вот для полноценной крупномасштабной игры его придется использовать в связке с другим ЯП.

<h3>PHP</h3>
PHP – настоящий верный друг любого веб-разработчика. Данный ЯП официально признан «классическим» для создания веб-страниц. Кроссплатформенный, быстрый, удобный для изучения. Получаемый на выходе исходный код обладает высокой читаемостью.

К недостаткам PHP можно отнести:

несовместимость имеющихся версий;
отсутствие многопотоковой работы.
Это – императивный ЯП. Рекомендован всем веб-мастерам.

<h3>Java</h3>
Разобравшись в языках низкого и высокого уровней, стоит обратить внимание на Java. Это – «классический» ЯП для кроссплатформенной разработки. Часто встречается в мобильных приложениях.

Java легко освоить – его синтаксис напоминает английский. Исходный код компактен и хорошо читаем. Функциональности Джавы можно только позавидовать – она предусматривает множество библиотек и фреймворков. На Java написана популярная игра Minecraft.

Рекомендован для изучения всеми разработчиками. Но сложные проекты на нем реализовать тяжело – Java забирает у устройства много памяти и места.

<h3>JavaScript</h3>
Язык программирования, который подходит web-программистам. Базируется на скриптах, которые хорошо совместимы со всеми популярными интернет-обозревателями. Включает в себя огромное количество функций и инструментов.

При помощи JS можно создать:

плагин;
виджет;
серверные утилиты;
офисные приложения;
прикладное ПО.
Существенный недостаток – это относительно низкий уровень безопасности кода.

<h3>SQL</h3>
Декларативное программирование включает в себя «языки баз данных и запросов». Самый популярный вариант – это SQL.

Он прост и понятен даже новичкам. Написание кодов не требует особой вдумчивости – вариантов достаточно мало. SQL использует строго ограниченный набор функций и команд. Обладает различными диалектами.

SQL полезен тем, кто планирует работать с информацией. Полноценное приложение на нем написать не удастся, а вот использовать для подключения БД – вполне.

<h3>HTML</h3>
HTML – язык разметки. Он подойдет тем, кто хочет написать собственный сайт или интернет-магазин. В нем просматривается преобладание тегов.

На HTML можно:

проводить форматирование текста;
редактировать блоки информации;
работать с имеющимися таблицами;
вставлять разнообразные объекты (мультимедиа в том числе);
работать с гиперссылками.
Для полноценной веб-разработки программисту пригодится CSS, а также навыки осуществления верстки.

    </p>
    <?php echo $today = date("Y-m-d H:i:s");?>
    </div>

  
 <div class="container mt-5">
  <h3>Оставьте свой комментарий</h3>
  <form name="comment" action="comment.php" method="post"> 
   <input type="text" name="name" placeholder="Введите имя" class="form-control" > 
  <textarea name="text_comment" class="form-control" placeholder="Введите ваше сообщение" ></textarea>
 <input type="hidden" name="page_id" value="150" > 
<button type="submit" name="send" class="btn btn-success">Отправить</button>
</form>
</div>

<?php
  $page_id = 150;// Уникальный идентификатор страницы (статьи или поста)
  $mysqli = new mysqli("localhost", "root", "root", "reg");// Подключается к базе данных
  $result_set = $mysqli->query("SELECT * FROM `comments` WHERE `page_id`='$page_id'"); //Вытаскиваем все комментарии для данной страницы
  while ($row = $result_set->fetch_assoc()) {
    print_r("<b>".$row["name"]."</b>: ".$row["text_comment"]); //Вывод комментариев
    
    echo "<br>";
    echo "<b>".$row["name"]."</b>: ".$row["text_comment"];
    
  }
?>

  <?php require "blocks/footer.php"?>
</main>
  </body>
</html>
